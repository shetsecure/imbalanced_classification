mlflow:
  log_dir: "logs/mlruns"
  experiment_type: "binary_classification"

model:
  name: resnet18

optimizer:
  name: SGD
  params:
    lr: 0.0005
    weight_decay: 1.0e-4
    momentum: 0.9

training:
  n_epochs: 50
  batch_size_train: 1024
  batch_size_val: 256
  use_progressive_sampling: True
  start_ratio: 0.1  # Starting ratio of minority to majority class samples
  end_ratio: 0.5    # Ending ratio of minority to majority class samples

data:
  train_path: data/train_img/
  labels_file: data/label_train.txt
  num_workers: 4

loss_function:
  type: BCEWithLogitsLoss
  pos_weight: True          # Use pos_weight for BCEWithLogitsLoss
  weight_factor: 10000        # Default scaling factor, can be adjusted
  custom_weight_scale: 
    use_custom: False         # Set to True to use custom scaling
    factor: 2.0              # Multiplier for the calculated class weights

transforms:
  train:
    - RandomHorizontalFlip: {}
    - ToTensor: {}
    - Normalize: 
        mean: [0.485, 0.456, 0.406]
        std: [0.229, 0.224, 0.225]
  val:
    - ToTensor: {}
    - Normalize: 
        mean: [0.485, 0.456, 0.406]
        std: [0.229, 0.224, 0.225]

device: cuda
